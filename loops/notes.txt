

# 🔁 JavaScript Loops – Full Explanation

## 🧠 What Is a Loop?

A **loop** is a programming construct that lets you repeat a block of code multiple times based on a condition.

For example: If you want to print numbers 1 to 100, you don’t want to write 100 lines of code. A loop lets you do it in just a few lines!

---

## 🔄 Types of Loops in JavaScript

### 1. ✅ `for` Loop – Most Common

**Best when you know how many times to loop.**

### 🧱 Structure:

```js
for (initialization; condition; update) {
  // Code to repeat
}
```

### 🧪 Example:

```js
for (let i = 1; i <= 5; i++) {
  console.log("Number is:", i);
}
```

### 🧾 Explanation:

* **Initialization:** `let i = 1` (start from 1)
* **Condition:** `i <= 5` (keep going until 5)
* **Update:** `i++` (increase by 1 each time)

---

### 2. ♻️ `while` Loop – Conditional Loop

**Best when you don’t know how many times to loop, and it depends on a condition.**

### 🧱 Structure:

```js
while (condition) {
  // Code to repeat
}
```

### 🧪 Example:

```js
let i = 1;
while (i <= 5) {
  console.log("While loop:", i);
  i++;
}
```

---

### 3. 🔄 `do...while` Loop – Runs At Least Once

**Runs the loop block **at least once** even if the condition is false.**

### 🧱 Structure:

```js
do {
  // Code to run at least once
} while (condition);
```

### 🧪 Example:

```js
let i = 1;
do {
  console.log("Do-while loop:", i);
  i++;
} while (i <= 5);
```

---

## 🔀 Loop Control Statements

### ✅ `break`

Used to **exit the loop** before the condition is false.

```js
for (let i = 1; i <= 5; i++) {
  if (i === 3) break;
  console.log("Breaking at:", i); // Stops at 3
}
```

### 🔁 `continue`

Skips the current loop iteration and **jumps to the next one**.

```js
for (let i = 1; i <= 5; i++) {
  if (i === 3) continue;
  console.log("Skipping 3:", i); // Skips 3
}
```

---

## 💡 Real Life Example: Loop Through an Array

```js
let fruits = ["apple", "banana", "cherry"];

for (let i = 0; i < fruits.length; i++) {
  console.log("Fruit:", fruits[i]);
}
```

---

## 🧪 Practice Challenges

1. Print numbers from 10 to 1 using a `for` loop.
2. Print only **even numbers** from 1 to 20 using `continue`.
3. Use a `while` loop to print numbers from 1 to 100.
4. Use a `do...while` loop to print “I love JS” 5 times.

---

## 📝 Summary Table

| Loop         | When to Use                           | Runs at least once? |
| ------------ | ------------------------------------- | ------------------- |
| `for`        | Fixed number of repetitions           | ❌                   |
| `while`      | Repeat until a condition is false     | ❌                   |
| `do...while` | Always run once, then check condition | ✅                   |

---

Would you like a code file with all of these examples bundled for your GitHub repo?
